## Direct log messages to stdout
## appender = class file which does the actual logging
## a file appender sends the log messages to a log file
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
##
### layout for appender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} %5p %40.40c:%4L - %m%n
#
#
#
## Hibernate logging options (INFO only shows startup messages)
#log4j.logger.org.hibernate=WARN
#log4j.logger.org.hibernate.SQL=INFO
#log4j.logger.org.hibernate.type=INFO
#log4j.logger.org.springframework.web=DEBUG

#log4j.logger.org.hibernate.SQL=DEBUG, sql
#log4j.additivity.org.hibernate.SQL=false


# ----------
# OWN CONFIGURATION
# ----------

# root logger
log4j.rootLogger=INFO, rollingFile
log4j.rootLogger.org.springframework=INFO
log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender
log4j.appender.rollingFile.File=urlaubsverwaltung.log
# creates a new file everytime the file size reaches the set maximum size
log4j.appender.rollingFile.MaxFileSize=2MB
log4j.appender.rollingFile.MaxBackupIndex=2
log4j.appender.rollingFile.Encoding=UTF-8
log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout
log4j.appender.rollingFile.layout.ConversionPattern=%p %d{dd MMM yyyy HH:mm:ss} - %m%n

# audit logger
# logs nontechnically occurences like 'user x applied for leave' or 'subtracted n days from holidays account y'
log4j.logger.audit=INFO, auditFile
log4j.appender.auditFile=org.apache.log4j.RollingFileAppender
log4j.appender.auditFile.File=audit.log
# creates a new file everytime the file size reaches the set maximum size
log4j.appender.auditFile.MaxFileSize=2MB
log4j.appender.auditFile.MaxBackupIndex=2
log4j.appender.auditFile.Encoding=UTF-8
log4j.appender.auditFile.layout=org.apache.log4j.PatternLayout
log4j.appender.auditFile.layout.ConversionPattern=%p %d{dd MMM yyyy HH:mm:ss} - %m%n

# sign logger
# logs possible occurent errors relating to private and public keys of users
log4j.logger.sign=INFO, signFile
log4j.appender.signFile=org.apache.log4j.RollingFileAppender
log4j.appender.signFile.File=sign.log
# creates a new file everytime the file size reaches the set maximum size
log4j.appender.signFile.MaxFileSize=2MB
log4j.appender.signFile.MaxBackupIndex=2
log4j.appender.signFile.Encoding=UTF-8
log4j.appender.signFile.layout=org.apache.log4j.PatternLayout
log4j.appender.signFile.layout.ConversionPattern=%p %d{dd MMM yyyy HH:mm:ss} - %m%n

# mailService logger
# logs possible occurent errors while sending emails
log4j.logger.org.synyx.urlaubsverwaltung.service.MailServiceImpl=INFO, mailFile
log4j.appender.mailFile=org.apache.log4j.RollingFileAppender
log4j.appender.mailFile.File=mail.log
# creates a new file everytime the file size reaches the set maximum size
log4j.appender.mailFile.MaxFileSize=2MB
log4j.appender.mailFile.MaxBackupIndex=2
log4j.appender.mailFile.Encoding=UTF-8
log4j.appender.mailFile.layout=org.apache.log4j.PatternLayout
log4j.appender.mailFile.layout.ConversionPattern=%p %d{dd MMM yyyy HH:mm:ss} - %m%n






